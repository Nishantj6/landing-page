{"version":3,"sources":["img/alex.jpg","serviceWorker.js","Navigation.js","Header.js","services.js","index.js"],"names":["module","exports","__webpack_require__","p","Boolean","window","location","hostname","match","Navigation","react_default","a","createElement","href","Component","mystyle","backgroundImage","concat","Collin","height","width","backgroundSize","margin","Headerson","style","this","props","title","button","React","Services","className","class","App","src_Navigation_0","src_Header","src_services","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"iFAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,wRCYpBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2ECIUC,mLAdX,OACCC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,2BACDF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAGC,KAAK,2BAAR,SACJH,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAGC,KAAK,0BAAR,UACJH,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAGC,KAAK,SAAR,oBARSC,6BCFpBC,SAAU,CACZC,gBAAe,OAAAC,OAASC,IAAT,KACfC,OAAQ,QACRC,MAAO,OACPC,eAAgB,QAChBC,OAAQ,WAmBGC,mLAVP,OACIb,EAAAC,EAAAC,cAAA,UAAQY,MAAST,GACbL,EAAAC,EAAAC,cAAA,cAAMa,KAAKC,MAAMC,MAAjB,KACAjB,EAAAC,EAAAC,cAAA,2CACAF,EAAAC,EAAAC,cAAA,KAAGC,KAAO,2BAA2BY,KAAKC,MAAME,gBANxCC,IAAMf,WCiCfgB,0LA5CP,OACIpB,EAAAC,EAAAC,cAAA,OAAKmB,UAAU,eACXrB,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,gCACAF,EAAAC,EAAAC,cAAA,OAAKmB,UAAU,OACfrB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAAA,KAAGoB,MAAO,uBAEdtB,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAAA,mDAEJF,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAAA,KAAGoB,MAAQ,gBAEftB,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,6CAEJF,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,YACAF,EAAAC,EAAAC,cAAA,KAAGoB,MAAQ,sBAEXtB,EAAAC,EAAAC,cAAA,UAAKF,EAAAC,EAAAC,cAAA,KAAGC,KAAK,4BAAR,YACLH,EAAAC,EAAAC,cAAA,iCAEJF,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,YACAF,EAAAC,EAAAC,cAAA,KAAGoB,MAAQ,sBAEXtB,EAAAC,EAAAC,cAAA,sCACAF,EAAAC,EAAAC,cAAA,sDAjCGiB,IAAMf,YCOvBmB,mLAEE,OACIvB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACsB,EAAD,MADJ,IAEIxB,EAAAC,EAAAC,cAACuB,EAAD,CAAWR,MAAM,mBAAmBC,OAAO,gBAC3ClB,EAAAC,EAAAC,cAACwB,EAAD,cANEP,IAAMf,WAexBuB,IAASC,OAAO5B,EAAAC,EAAAC,cAAC2B,EAAD,MAASC,SAASC,eAAe,SJwG3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.4abee6a5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/alex.9b7be5c6.jpg\";","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n"," import React, { Component } from 'react';\r\n //import logo from './logo.svg';\r\n import './App.css';\r\n import './Navigation.css';\r\n \r\n\r\n class Navigation extends Component {\r\n   render() {\r\n     return (\r\n      <nav>\r\n          <h2>React Project</h2>\r\n         <ul>\r\n             <li><a href='https://www.google.com/'>Home</a></li>\r\n             <li><a href='http://www.motogp.com/'>About</a></li>\r\n             <li><a href='#quit'>LogOut</a></li>\r\n\r\n         </ul>\r\n     </nav>\r\n     );\r\n   }\r\n }\r\n\r\n export default Navigation;\r\n","import React from 'react';\r\nimport Collin from './img/alex.jpg';\r\nimport './Header.css';\r\n\r\nconst mystyle = {\r\n    backgroundImage: `url(${Collin})`,\r\n    height: '900px',\r\n    width: \"100%\",\r\n    backgroundSize: 'cover',\r\n    margin: '0 auto'\r\n    \r\n    \r\n    \r\n\r\n}\r\n\r\nclass Headerson extends React.Component{\r\n    render(){\r\n        return(\r\n            <header style = {mystyle}>\r\n                <h1> {this.props.title} </h1>\r\n                <p>This is my First React Project</p>\r\n                <a href = \"http://www.data.gov.au/\">{this.props.button}</a>\r\n            </header>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Headerson;","import React from 'react';\r\nimport './services.css'\r\n\r\nclass Services extends React.Component{\r\n    render(){\r\n        return(\r\n            <div className=\"servicemenu\">\r\n                <h3> Services</h3>\r\n                <h2>We offer currently</h2>\r\n                <div className=\"row\">\r\n                <div>\r\n                    <span>\r\n                        <i class =\"fas fa-mobile-alt\"></i>\r\n                    </span>\r\n                    <h4>Mobile Platform</h4>\r\n                    <p>Mobile platforms like IOS and Android</p>\r\n                </div>\r\n                <div>\r\n                    <span>\r\n                        <i class = \"fas fa-pen\"></i>\r\n                    </span>\r\n                    <h4>Redesigned</h4>\r\n                    <p>Completly Redesigned for IOS 12</p>\r\n                </div>\r\n                <div>\r\n                    <span>\r\n                    <i class = \"far fa-thumbs-up\"></i>\r\n                    </span>\r\n                    <h4 ><a href=\"https://www.facebook.com\">Like Us</a></h4>\r\n                    <p>Like Us on facebook</p>\r\n                </div>\r\n                <div>\r\n                    <span>\r\n                    <i class = \"fab fa-app-store\"></i>\r\n                    </span>\r\n                    <h4>IOS and Android Platform</h4>\r\n                    <p>Currently compatible for IOS 12</p>\r\n                </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default Services;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n//import App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport Navigation from './Navigation';\r\nimport Headerson from './Header';\r\nimport Services from './services';\r\n//import { base } from './firebase';\r\n\r\nclass App extends React.Component{\r\n    render(){\r\n        return(\r\n            <div>\r\n                <Navigation />,\r\n                <Headerson title=\"WELCOME TO REACT\" button=\"Explore now\" />\r\n                <Services />\r\n                \r\n            \r\n               \r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}